class Kettle

  def initialize
    @kettle_off = true
  end

  def boil_water(kettle_ready)
    if kettle_ready == true ?
      puts "I'm boiling water"
      puts "Completed"
      @kettle_off = false
    end
  end

end


Для программы выделил два класса Class Person и Class ElectricKettle.
микрокопьютер - осуществляет действия

Человек - производит действие, нажимает кнопку, поэтому в Class Person создам
метод для нажатия на кнопку. В этом классе у меня пустой конструктор.

Class ElectricKettle - это класс собственно самого объекта. В задании явно указаны
только два свойства, это микрокомпьютер и кнопка. Для них создам поля в классе
с названиями @micro_pc, @button. В момент создания объекта, @micro_pc, @button
находятся не в активном состоянии. Предполагаю, что @micro_pc переходит в
активное состояни "on", только в момент, когда включили кнопку @button. В данной
программе @micro_pc не переходит в активное состояние, если чайник просто включили
в розетку. Активное состояние  @micro_pc управляется только кнопкой.
Когда происходит нажатие кнопки, то включается микрокомпьютер,и микрокомпютер
передает задание вскяпитить воду, то естьпередает управление элементам для нагревания воды.
Когда температура больше или равно 100 градусов,микрокомпьютер забирает управление
у элементов нагревания воды и возвращает кнопку чайника в начальное положение.
После этого микрокомпьютер выключается автоматически сам.
Ниже просто, как пример привел названия классов и методов, ка они будут представлены
в программе. 

#В классе Person конструктор пустой.
Class Person
#Объект класса Person вызывает этот метод для того, чтобы нажать кнопку чайника.
  def press_the_button
    ElectricKettle.new.button_on_off("on")
  end
end
#-------------------------------------------------------------------------------
#В классе ElectricKettle есть два поля: микроконтроллер @micro_pc и
#кнопка чайника @button. В момент создания объекта класса ElectricKettle
#конструктор создаст микроконтроллер и кнопку, которые будут в неактивном состоянии.
Class ElectricKettle
@micro_pc
@button

  def initialize
    @micro_pc = "off"
    @button = "off"
  end

#Метод будет менять состояния кнопки: нажата/не нажата
 def button_on_off(state)
   @button = state
   #Проверяем,  если кнопка включена, то включаем микропроцессор
   if @button == true
     @micro_pc = "on"
     puts "Передай задачу другим элементам вскипятить воду."
     puts "Вода закипела!"
     @micro_pc = "off" # когда вода закипела выключить микрокомпьютер
     @button = "off" # и вернуть кнопку в обратное состояние
   end
 end

#метод проверяет нажата ли кнопка чайника
  def button_is_pressed?
  end
end
